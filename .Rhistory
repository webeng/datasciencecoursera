head(gdp)
names(gdp)
mergedData_f = merge(gdp,education, by.x = c(1), by.y=c(1), all=FALSE)
dim(mergedData_f)
mergedData_f = merge(gdp,education, by.x = "X", by.y="CountryCode", all=FALSE)
dim(mergedData_f)
names(mergedData_f)
head(gdp)
gdp[,5]
sort(mergedData_f$c(5))
sort(mergedData_f$X.3)
sort(mergedData_f$X.3,decreasing = FALSE)
sort(mergedData_f$X.3,decreasing = FALSE)[,c(1)]
sort(mergedData_f$X.3,decreasing = FALSE)[:,c(1)]
sort(mergedData_f$X.3,decreasing = FALSE)[c(1)]
sort(mergedData_f$X.3,decreasing = FALSE)[,1]
mergedData_f[order(mergedData_f$X.3),]
head(mergedData_f[order(mergedData_f$X.3),])
head(mergedData_f[order(mergedData_f$X.3),c(1)])
names(mergedData_f)
head(mergedData_f[order(mergedData_f$X.3),c(1,5,11)])
head(mergedData_f[order(mergedData_f$X.3),c(1,5,11)])
head(mergedData_f[order(mergedData_f$X.3),c(1,5,11)])
head(mergedData_f[order(mergedData_f[,5]),c(1,5,11)])
head(mergedData_f[order(as.numeric(mergedData_f[,5])),c(1,5,11)])
head(mergedData_f[order(as.numeric(as.character(mergedData_f[,5]))),c(1,5,11)])
head(mergedData_f[order(-as.numeric(as.character(mergedData_f[,5]))),c(1,5,11)])
mergedData_f[order(-as.numeric(as.character(mergedData_f[,5]))),c(1,5,11)]
gdp <- read.csv("./data/gdp.csv", sep = ',', header = FALSE, stringsAsFactors = FALSE)
head(gdp)
education <- read.csv("./data/education.csv", stringsAsFactors = FALSE)
mergedData_f = merge(gdp,education, by.x = "X", by.y="CountryCode", all=FALSE)
names(gdp)
gdp <- read.csv("./data/gdp.csv", sep = ',', header = TRUE, stringsAsFactors = FALSE)
head(gdp)
education <- read.csv("./data/education.csv", stringsAsFactors = FALSE)
head(education)
mergedData_f = merge(gdp,education, by.x = "X", by.y="CountryCode", all=FALSE)
head(mergedData_f)
dim(mergedData_f)
dim(gdp)
gdp
gdp
head(gdp)
gdp[,1]
as.character(gdp[,1])
names(education)
education[,31]
education[,1]
head(education[,28])
head(education[,29])
head(gdp[1])
head(education[,1])
head(as.character(education[,1]))
head(as.character(gdp[1]))
mergedData_f = merge(gdp,education, by.x = "X", by.y="CountryCode", all=FALSE)
head(mergedData_f)
names(mergedData_f)
mergedData_f[,c(1,5,11)]
?merge
is.na(mergedData_f[,c(5)])
mergedData_f[,c(5)]
as.numeric(mergedData_f[,c(5)])
mergedData_f[,c(5)]
as.character(mergedData_f[,c(5)])
as.numeric(as.character(mergedData_f[,c(5)]))
gdp_table <- read.table("./data/gdp.csv", sep = ',', header = TRUE, stringsAsFactors = FALSE)
gdp_table <- read.table("./data/gdp.csv")
as.numeric(gsub(",","",mergedData_f[,c(5)]))
mergedData_f[order(-as.numeric(gsub(",","",mergedData_f[,5]))),c(1,5,11)]
head(mergedData_f[order(-as.numeric(gsub(",","",mergedData_f[,5]))),c(1,5,11)])
mergedData_f[order(-as.numeric(gsub(",","",mergedData_f[,5]))),c(1,5,11)]
mergedData_f[order(-as.numeric(gsub(",","",mergedData_f[,5]))),c(1,5,11)][18,]
names(gdp)
head(gdp)
gdp[,c(1,4)]
dim(gdp[,c(1,4)])
head(gdp)
gdp[,c(1,2)]
gdp[,c(1,2)]
head(gdp)
tail(gdp)
head(gdp)
is.na(gdp[,c(3)])
is.na(gdp[,c(2)])
gdp
head(gdp)
is.numeric(gdp[,c(2)])
is.numeric(gdp[,2])
gdp[,2]
as.numeric(gdp[,2])
is.na(as.numeric(gdp[,2]))
gdp[is.na(as.numeric(gdp[,2]))
]
is.na(as.numeric(gdp[,2]))
gdp[is.na(as.numeric(gdp[,2]))]
gdp[,is.na(as.numeric(gdp[,2]))]
gdp[,gdp[,c(2)] == is.na(as.numeric(gdp[,2]))]
gdp[,(gdp[,c(2)] == is.na(as.numeric(gdp[,2])))]
is.na(as.numeric(gdp[,2]))
is.na(as.numeric(gdp[,2]))
as.numeric(gdp[,2])
gdp[,2] <- as.numeric(gdp[,2])
head(gdp)
gdp[,complete.cases(gdp[,2])]
gdp[,complete.cases(gdp[,2])[,2]]
complete.cases(gdp[,2])
gdp[,complete.cases(gdp[,2])]
gdp[,!is.na(gd[,2])]
gdp[,!is.na(gdp[,2])]
gdp[,!is.na(gdp[2])]
names(gdp)
gdp[,!is.na(gdp['Gross.domestic.product.2012'])]
gdp[!is.na(gdp['Gross.domestic.product.2012']),]
gdp[complete.cases(gdp[,2]),]
dim(gdp[complete.cases(gdp[,2]),])
gdp <- gdp[complete.cases(gdp[,2]),]
mergedData_f = merge(gdp,education, by.x = "X", by.y="CountryCode", all=FALSE)
dim(mergedData_f)
head(mergedData_f)
mergedData_f[order(-mergedData_f[,5]),c(1,5,11)]
mergedData_f[order(mergedData_f[,5]),c(1,5,11)]
mergedData_f[order(mergedData_f[,5]),c(1,5,11)][1:10,]
mergedData_f[order(-as.numeric(gsub(",","",mergedData_f[,5]))),c(1,5,11)][18,]
mergedData_f[order(-as.numeric(gsub(",","",mergedData_f[,5]))),c(1,5,11)]
mergedData_f[order(-as.numeric(gsub(",","",mergedData_f[,5]))),c(1,5,11)][13,]
mergedData_f[order(-as.numeric(gsub(",","",mergedData_f[,5]))),c(1,5,11)][1:10,]
names(gdp)
names(mergedData_f)
mergedData_f[,c(1,5,11,12)]
mergedData_f[,c(1,5,12)]
mergedData_f[,mergedData_f$Income.group == 'High income: OECD'][,c(1,5,12)]
mergedData_f[,mergedData_f$Income.group == 'High income: OECD']
mergedData_f[,c(1,5,12)]
mergedData_f[,(mergedData_f$Income.group == 'High income: OECD')]
mergedData_f[,mergedData_f[,12] == "High income: OECD"]
mergedData_f[,(mergedData_f[,12] == "High income: OECD")]
mergedData_f[,(mergedData_f[,12] == "High income: OECD")][,1,5,11]
mergedData_f[,(mergedData_f[,12] == "High income: OECD")][,c(1,5,11)]
mergedData_f[mergedData_f[,12] == 'High income: OECD',]
mergedData_f[mergedData_f[,12] == 'High income: OECD',][,c(1,5,11,12)]
names(mergedData_f)
head(gdp)
mergedData_f[mergedData_f[,12] == 'High income: OECD',][,c(1,5,11,12)]
mergedData_f[mergedData_f[,12] == 'High income: OECD',][,c(1,2,5,11)]
mergedData_f[mergedData_f[,12] == 'High income: OECD',][,c(2)]
mean(mergedData_f[mergedData_f[,12] == 'High income: OECD',][,c(2)])
mean(mergedData_f[mergedData_f[,12] == 'High income: nonOECD',][,c(2)])
190/5
quantile(mergedData_f)
cut(mergedData_f[,2], breaks=quantile(mergedData_f[,2]))
cut(mergedData_f[,2], breaks=quantile(mergedData_f[,5])
)
cut(mergedData_f[,2], breaks=quantile(mergedData_f[,5]))
cut(mergedData_f[,5], breaks=quantile(mergedData_f[,5]))
head(mergedData_f)
mergedData_f[,5]
as.numeric(gsub(",","",mergedData_f[,5]))
mergedData_f[,5] <- as.numeric(gsub(",","",mergedData_f[,5]))
cut(mergedData_f[,5], breaks=quantile(mergedData_f[,5]))
?quantile
cut(mergedData_f[,5], breaks=quantile(mergedData_f[,5], probs = c(0,0.25,0.5,0.75,1)))
merged_data$groups <- cut(mergedData_f[,5], breaks=quantile(mergedData_f[,5], probs = c(0,0.25,0.5,0.75,1)))
mergedData_f$gdpGroups <- cut(mergedData_f[,5], breaks=quantile(mergedData_f[,5], probs = c(0,0.25,0.5,0.75,1)))
table(mergedData_f$gdpGroups)
table(mergedData_f$gdpGroups, mergedData_f$Income.group)
mergedData_f$gdpGroups <- cut(mergedData_f[,5], breaks=quantile(mergedData_f[,5], probs = c(0,0.25,0.5,0.75,1)))
mergedData_f$gdpGroups
mergedData_f$gdpGroups <- cut(mergedData_f[,5], breaks=quantile(mergedData_f[,5], probs = c(0.2,0.4,0.6,0.8,1)))
mergedData_f$gdpGroups
table(mergedData_f$gdpGroups, mergedData_f$Income.group)
mergedData_f$gdpGroups <- cut(mergedData_f[,5], breaks=quantile(mergedData_f[,5]))
mergedData_f$gdpGroups
?cut2
cut2
install.packages('Hmisc')
library('hmsic')
cut2
library('Hmisc')
?cut2
cut2(mergedData_f[,5], 5 , 38)
cut2(mergedData_f[,5], 5)
cut2(mergedData_f[,5], 5,38,5)
mergedData_f$gdpGroups <- cut2(mergedData_f[,5], 5,38,5)
table(mergedData_f$gdpGroups, mergedData_f$Income.group)
cut2(mergedData_f[,5], g=5,m=38)
mergedData_f$gdpGroups <- cut2(mergedData_f[,5], g=5,m=38)
table(mergedData_f$gdpGroups, mergedData_f$Income.group)
table(mergedData_f$gdpGroups)
names(mergedData_f)
table(mergedData_f$gdpGroups, mergedData_f$Income.Group)
dim(mergedData_f)
mergedData_f[order(mergedData_f[,5]),c(1,5,11)]
mergedData_f[order(mergedData_f[,5]),c(1,5,11)][13,]
dim(mergedData_f)
getwd()
##READING DATA
activity_labels = read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep="\t",
col.names=c("id", "name"),
fill=FALSE,
strip.white=TRUE)
##READING DATA
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep="\t",
col.names=c("id", "name"),
fill=FALSE,
strip.white=TRUE)
##READING DATA
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",sep="\t",  col.names=c("id", "name"),  fill=FALSE,  strip.white=TRUE)
##READING DATA
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",sep="\t",  col.names=c("name"),  fill=FALSE,  strip.white=TRUE)
activity_labels
?read.table
strip.white=TRUE)
##READING DATA
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep=" ",
col.names=c("name"),
fill=FALSE,
strip.white=TRUE)
##READING DATA
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep="\t",
col.names=c("id","name"),
fill=FALSE,
strip.white=TRUE)
View(activity_labels)
##READING DATA
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep="\t",
col.names=c("id","name"),
fill=FALSE,
header = FALSE,
strip.white=TRUE)
##READING DATA
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep="\t",
col.names=c("id","name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
##READING DATA
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep="\t",
col.names=c("name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
activity_labels
View(activity_labels)
View(activity_labels)
##READING DATA
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
activity_labels
##READING DATA
#Read Activity Labels
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
features <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/features.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
##READING DATA
#Read Activity Labels
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Features
features <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/features.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - Subject Test
subject_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/subject_test.txt",
sep=" ",
col.names=c('subject_id'),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
features
features[,1]
features[,2]
##READING DATA
#Read Activity Labels
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Features
features <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/features.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - Subject Test
subject_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/subject_test.txt",
sep=" ",
col.names=c('subject_id'),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - X Test Samples
X_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/X_test.txt",
sep=" ",
col.names=features[,2],
fill = FALSE,
header = FALSE,
strip.white=TRUE)
##READING DATA
#Read Activity Labels
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Features
features <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/features.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - Subject Test
subject_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/subject_test.txt",
sep=" ",
col.names=c('subject_id'),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - X Test Samples
X_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/X_test.txt",
sep="\n",
col.names=features[,2],
fill = FALSE,
header = FALSE,
strip.white=TRUE)
dim(features[,2])
length(features[,2])
##READING DATA
#Read Activity Labels
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Features
features <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/features.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - Subject Test
subject_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/subject_test.txt",
sep=" ",
col.names=c('subject_id'),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - X Test Samples
X_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/X_test.txt",
sep="\n",
col.names=features[,2],
fill = FALSE,
header = FALSE,
strip.white=TRUE)
##READING DATA
#Read Activity Labels
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Features
features <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/features.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - Subject Test
subject_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/subject_test.txt",
sep=" ",
col.names=c('subject_id'),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - X Test Samples
#col.names=features[,2],
X_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/X_test.txt",
sep="\n",
col.names=c('0'),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
head(X_test)
dim(X_test)
##READING DATA
#Read Activity Labels
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Features
features <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/features.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - Subject Test
subject_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/subject_test.txt",
sep=" ",
col.names=c('subject_id'),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - X Test Samples
#col.names=features[,2],
X_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/X_test.txt",
sep=" ",
col.names=c('0'),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
##READING DATA
#Read Activity Labels
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Features
features <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/features.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - Subject Test
subject_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/subject_test.txt",
sep=" ",
col.names=c('subject_id'),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - X Test Samples
#col.names=features[,2],
X_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/X_test.txt",
sep=" ",
col.names=features[,2],
fill = FALSE,
header = FALSE,
strip.white=TRUE)
?read.table
##READING DATA
#Read Activity Labels
activity_labels <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/activity_labels.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Features
features <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/features.txt",
sep=" ",
col.names=c('id',"name"),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - Subject Test
subject_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/subject_test.txt",
sep=" ",
col.names=c('subject_id'),
fill = FALSE,
header = FALSE,
strip.white=TRUE)
#Read Test DATA - X Test Samples
#col.names=features[,2],
X_test <- read.table("./ProgrammingAssignment4/data/UCI HAR Dataset/test/X_test.txt",
sep="",
col.names=features[,2],
fill = FALSE,
header = FALSE,
strip.white=TRUE)
head(X_test)
